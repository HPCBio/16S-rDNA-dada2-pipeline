/*
 * -------------------------------------------------
 *  UCT dada2 Nextflow config file
 * -------------------------------------------------
 * Default config options for all environments.
 * Cluster-specific config options should be saved
 * in the conf folder and imported under a profile
 * name here.
 */

// Global default params, used in configs
// Some help with time stamps
import java.text.SimpleDateFormat

params {
    // Configurable variables
    clusterOptions = ''
    project = false
    precheck = false
    email = false
    plaintext_email = false
    amplicon = '16S'

    // Show help emssage
    help = false

    name = false
    base = "uct-cbio"
    version = 0.5 //pipeline version
    // Pipeline Options
    reads = "data/*{1,2}.fastq.gz"
    timestamp = new SimpleDateFormat("yyyy-MM-dd").format(new java.util.Date())
    outdir = "./" + timestamp + "-dada2"
    ticket = 0 //for Redmine, not currently used (KL)

    // Trimming
    fwdprimer = false
    revprimer = false
    trimFor = false
    trimRev = false
    truncFor = 0
    truncRev = 0
    maxEEFor = 2
    maxEERev = 2
    truncQ = 2 //default
    maxN = 0 //default
    maxLen = "Inf" // default, this can be coersed in R using as.numeric
    minLen = 50 // default
    minAmpLen = 50 // default

    // I think we can make these bool 'false' as above with R coersion (either through as.logical or using optparse in a Rscript)
    rmPhiX = "F"

    // Merging
    minOverlap = 20 // default=12
    maxMismatch = 0 // default
    trimOverhang = "F" // KL: I don't think we have overhangs for WISH project03
    justConcatenate = "F"

    // Taxonomic assignment
    taxassignment = 'rdp' // default: RDP classifier implementation in dada2
    reference = false
    species = false

    // Phylogenetic analysis
    runtree = 'phangorn' // default, current alternative is 'fasttree'

    // alignment
    aligner = 'DECIPHER' // default
    infernalCM  = false

    // dada2 sample inference pooling (requires all samples)
    pool = "F"

    // MultiQC
    interactiveMultiQC = false

    // Alternate outputs
    toTabular = true
    toQIIME2 = false
    toBIOM = false

}

profiles {

  uct_hex{
    includeConfig 'conf/uct_hex.config'
    includeConfig 'conf/base.config'
  }
  uiuc_biocluster {
    includeConfig 'conf/base.config'
    includeConfig 'conf/uiuc_biocluster.config'
  }
  none {
    // Don't load any config (for use with custom home configs)
  }

}


// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

timeline {
  enabled = true
  file = "${params.outdir}/pipeline_info/dada2_timeline.html"
}
report {
  enabled = true
  file = "${params.outdir}/pipeline_info/dada2_report.html"
}
trace {
  enabled = true
  file = "${params.outdir}/pipeline_info/dada2_trace.txt"
}
dag {
  enabled = true
  file = "${params.outdir}/pipeline_info/dada2_DAG.svg"
}

manifest {
  homePage = 'https://github.com/kviljoen/16S-rDNA-dada2-pipeline'
  description = 'Nextflow dada2 analysis pipeline for UCT CBIO'
  mainScript = 'main.nf'
}

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
  if(type == 'memory'){
    try {
      if(obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
      return obj
    }
  } else if(type == 'time'){
    try {
      if(obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
      return obj
    }
  } else if(type == 'cpus'){
    try {
      return Math.min( obj, params.max_cpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
      return obj
    }
  }
}
